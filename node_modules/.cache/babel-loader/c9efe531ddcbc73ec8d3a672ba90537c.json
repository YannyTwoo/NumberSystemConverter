{"ast":null,"code":"var _jsxFileName = \"/Users/adirathgoswami/Desktop/codejune/numbersystemsite/frontend/src/components/Converter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst map1 = new Map([[\"decimal\", 10], [\"binary\", 2], [\"octal\", 8], [\"hexadecimal\", 16], [\"base-32\", 32]]);\nconst mapHexadecimalValues = new Map([[10, \"A\"], [11, \"B\"], [12, \"C\"], [13, \"D\"], [14, \"E\"], [15, \"F\"]]);\n\nconst convertNumber = (num, baseOg, baseConv) => {\n  baseOg = map1.get(baseOg);\n  baseConv = map1.get(baseConv);\n\n  const toDecimal = num => {\n    let a,\n        c = 0,\n        sum = 0;\n    let n = num;\n\n    if (baseOg != '10') {\n      while (n > 0) {\n        a = n % 10;\n        sum += Math.pow(a, Math.pow(a, c));\n        c++;\n        n = n / 10;\n      }\n\n      return sum;\n    } else {\n      return num;\n    }\n  };\n\n  num = toDecimal(num);\n\n  const toOBase = () => {\n    let a,\n        c = 0,\n        sum = '';\n    let n = num;\n\n    if (baseConv != '10') {\n      while (n > 0) {\n        a = n % baseConv;\n\n        if (baseConv === 16 && a > 9) {\n          a = mapHexadecimalValues.get(a);\n        }\n\n        sum += a;\n        n = n / baseConv;\n      }\n\n      return sum;\n    } else {\n      return num;\n    }\n  };\n\n  num = toOBase(num);\n  return num;\n};\n\nfunction Converter() {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [outputNumber, setOutputNumber] = useState(0);\n\n  const updateNumber = event => {\n    setNumber(event.target.value);\n    setOutputNumber(convertNumber(number, inpChoice, outChoice));\n  }; //radio button logic to decide the base to and from to convert to \n\n\n  const [inpChoice, setInpChoice] = useState('decimal');\n  const [outChoice, setOutChoice] = useState('binary');\n\n  const updateInpChoice = event => {\n    setInpChoice(event.target.value);\n    console.log(inpChoice);\n  };\n\n  const updateOutChoice = event => {\n    setOutChoice(event.target.value);\n    console.log(outChoice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"converter\",\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: convertNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radbtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateInpChoice,\n          type: \"radio\",\n          value: \"decimal\",\n          name: \"inp\",\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), \" decimal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateInpChoice,\n          type: \"radio\",\n          value: \"binary\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), \" binary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateInpChoice,\n          type: \"radio\",\n          value: \"octal\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), \" octal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateInpChoice,\n          type: \"radio\",\n          value: \"hexadecimal\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), \" hexadecimal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        type: \"number\",\n        children: outputNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radbtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateOutChoice,\n          type: \"radio\",\n          value: \"decimal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \" decimal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateOutChoice,\n          type: \"radio\",\n          value: \"binary\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), \" binary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateOutChoice,\n          type: \"radio\",\n          value: \"octal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), \" octal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: updateOutChoice,\n          type: \"radio\",\n          value: \"hexadecimal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), \" hexadecimal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Converter, \"lr8cuatjm/mYAEGby/Bq2rZd9A8=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useState","map1","Map","mapHexadecimalValues","convertNumber","num","baseOg","baseConv","get","toDecimal","a","c","sum","n","Math","pow","toOBase","Converter","number","setNumber","outputNumber","setOutputNumber","updateNumber","event","target","value","inpChoice","outChoice","setInpChoice","setOutChoice","updateInpChoice","console","log","updateOutChoice"],"sources":["/Users/adirathgoswami/Desktop/codejune/numbersystemsite/frontend/src/components/Converter.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst map1 = new Map([\n    [\"decimal\", 10],\n    [\"binary\", 2],\n    [\"octal\", 8],\n    [\"hexadecimal\", 16],\n    [\"base-32\", 32]\n])\nconst mapHexadecimalValues = new Map([\n    [10,\"A\"],\n    [11,\"B\"],\n    [12,\"C\"],\n    [13,\"D\"],\n    [14,\"E\"],\n    [15,\"F\"],\n])\n\n\n\nconst convertNumber = (num, baseOg, baseConv) => {\n\n    baseOg = map1.get(baseOg);\n    baseConv = map1.get(baseConv);\n\n    const toDecimal = (num) => {\n        let a, c = 0, sum = 0;\n        let n = num;\n\n        if (baseOg != '10') {\n            while (n > 0) {\n                a = n % 10;\n                sum += Math.pow(a, Math.pow(a, c))\n                c++;\n                n = n / 10;\n            }\n            return sum;\n        } else {\n            return num;\n        }\n    }\n    num = toDecimal(num);\n\n    const toOBase = () =>{\n        let a, c = 0, sum = '';\n        let n = num;\n\n        if (baseConv != '10') {\n            while (n > 0) {\n                a = n % baseConv;\n                if(baseConv === 16 && a>9){\n                    a = mapHexadecimalValues.get(a);\n                }\n                sum += a;\n                n = n / baseConv;\n            }\n            return sum;\n        } else {\n            return num;\n        }\n    }\n\n    num = toOBase(num);\n    return num;\n}\n\n\nfunction Converter() {\n\n    const [number, setNumber] = useState(0);\n    const [outputNumber, setOutputNumber] = useState(0);\n\n    const updateNumber = (event) =>{\n        setNumber(event.target.value)\n\n        setOutputNumber(convertNumber(number , inpChoice, outChoice))\n    }\n\n\n    //radio button logic to decide the base to and from to convert to \n    const [inpChoice, setInpChoice] = useState('decimal');\n    const [outChoice, setOutChoice] = useState('binary');\n    const updateInpChoice = (event) => {\n        setInpChoice(event.target.value)\n        console.log(inpChoice)\n    }\n    const updateOutChoice = (event) => {\n        setOutChoice(event.target.value)\n        console.log(outChoice)\n    }\n\n\n\n    return (\n        <div id=\"converter\" className=\"container\">\n            <div className=\"card\">\n                <div className=\"card-head\">\n                    <h3>Input</h3>\n                </div>\n                <input type=\"text\" onChange={convertNumber} />\n                <div className=\"radbtns\">\n                    <input onClick={updateInpChoice} type=\"radio\" value=\"decimal\" name=\"inp\" checked /> decimal\n                    <input onClick={updateInpChoice} type=\"radio\" value=\"binary\" name=\"inp\" /> binary\n                    <input onClick={updateInpChoice} type=\"radio\" value=\"octal\" name=\"inp\" /> octal\n                    <input onClick={updateInpChoice} type=\"radio\" value=\"hexadecimal\" name=\"inp\" /> hexadecimal\n                </div>\n            </div>\n            <div className=\"card\">\n                <div className=\"card-head\">\n                    <h3>Output</h3>\n                </div>\n                <p type=\"number\">{outputNumber}</p>\n                <div className=\"radbtns\">\n                    <input onClick={updateOutChoice} type=\"radio\" value=\"decimal\" name=\"out\" /> decimal\n                    <input onClick={updateOutChoice} type=\"radio\" value=\"binary\" name=\"out\" /> binary\n                    <input onClick={updateOutChoice} type=\"radio\" value=\"octal\" name=\"out\" /> octal\n                    <input onClick={updateOutChoice} type=\"radio\" value=\"hexadecimal\" name=\"out\" /> hexadecimal\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Converter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}