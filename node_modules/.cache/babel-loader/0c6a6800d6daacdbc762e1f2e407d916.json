{"ast":null,"code":"var _jsxFileName = \"/Users/adirathgoswami/Desktop/codejune/numbersystemsite/frontend/src/components/Converter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst map1 = new Map([[\"decimal\", 10], [\"binary\", 2], [\"octal\", 8], [\"hexadecimal\", 16], [\"base-32\", 32]]);\n\nconst convertNumber = (num, baseOg, baseConv) => {\n  return parseInt(num, baseOg).toString(baseConv);\n};\n\nfunction Converter() {\n  _s();\n\n  // const updateOutputNumber = (num) =>{\n  //     setOutputNumber(num)\n  // }\n  //radio button logic to decide the base to and from to convert to \n  const [inpChoice, setInpChoice] = useState('decimal');\n  const [outChoice, setOutChoice] = useState('binary');\n\n  const updateInpChoice = event => {\n    setInpChoice(event.target.value);\n    console.log(inpChoice);\n  };\n\n  const updateOutChoice = event => {\n    setOutChoice(event.target.value);\n    console.log(outChoice);\n  };\n\n  const [number, setNumber] = useState(0);\n  const [outputNumber, setOutputNumber] = useState(0);\n\n  const updateNumber = event => {\n    setNumber(event.target.value); // updateOutputNumber(number);\n\n    updateOutputNumber(event.target.value); //passing number should be ideal but last digit entered wasn't processing\n  };\n\n  const updateOutputNumber = num => {\n    const a = map1.get(inpChoice);\n    const b = map1.get(outChoice);\n    setOutputNumber(convertNumber(num, a, b));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"converter\",\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: updateNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radbtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"decimal\",\n          name: \"inp\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), \" decimal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"binary\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \" binary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"octal\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), \" octal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"hexadecimal\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), \" hexadecimal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        type: \"number\",\n        children: [\"out: \", outputNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radbtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"decimal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), \" decimal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"binary\",\n          name: \"out\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" binary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"octal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \" octal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"hexadecimal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \" hexadecimal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Converter, \"g0/xX2QoXr3H2/ivWwYF31vM1Rs=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useState","map1","Map","convertNumber","num","baseOg","baseConv","parseInt","toString","Converter","inpChoice","setInpChoice","outChoice","setOutChoice","updateInpChoice","event","target","value","console","log","updateOutChoice","number","setNumber","outputNumber","setOutputNumber","updateNumber","updateOutputNumber","a","get","b"],"sources":["/Users/adirathgoswami/Desktop/codejune/numbersystemsite/frontend/src/components/Converter.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst map1 = new Map([\n    [\"decimal\", 10],\n    [\"binary\", 2],\n    [\"octal\", 8],\n    [\"hexadecimal\", 16],\n    [\"base-32\", 32]\n])\n\nconst convertNumber = (num, baseOg, baseConv)=>{\n    return parseInt(num, baseOg).toString(baseConv);\n}\n\nfunction Converter() {\n\n    // const updateOutputNumber = (num) =>{\n    //     setOutputNumber(num)\n    // }\n\n    //radio button logic to decide the base to and from to convert to \n    const [inpChoice, setInpChoice] = useState('decimal');\n    const [outChoice, setOutChoice] = useState('binary');\n    const updateInpChoice = (event) => {\n        setInpChoice(event.target.value)\n        console.log(inpChoice)\n    }\n    const updateOutChoice = (event) => {\n        setOutChoice(event.target.value)\n        console.log(outChoice)\n    }\n\n    const [number, setNumber] = useState(0);\n    const [outputNumber, setOutputNumber] = useState(0);\n\n    const updateNumber = (event) =>{\n        setNumber(event.target.value);\n        // updateOutputNumber(number);\n        updateOutputNumber(event.target.value) //passing number should be ideal but last digit entered wasn't processing\n    }\n    const updateOutputNumber = (num)=>{\n        const a = map1.get(inpChoice);\n        const b = map1.get(outChoice);\n\n        setOutputNumber(convertNumber(num , a, b))\n    }\n\n    return (\n        <div id=\"converter\" className=\"container\">\n            <div className=\"card\">\n                <div className=\"card-head\">\n                    <h3>Input</h3>\n                </div>\n                <input type=\"text\" onChange={updateNumber} />\n                <div className=\"radbtns\">\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"decimal\" name=\"inp\" defaultChecked /> decimal\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"binary\" name=\"inp\" /> binary\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"octal\" name=\"inp\" /> octal\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"hexadecimal\" name=\"inp\" /> hexadecimal\n                </div>\n            </div>\n            <div className=\"card\">\n                <div className=\"card-head\">\n                    <h3>Output</h3>\n                </div>\n                {/* <p type=\"number\">num: {number}</p> */}\n                <p type=\"number\">out: {outputNumber}</p>\n                <div className=\"radbtns\">\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"decimal\" name=\"out\" /> decimal\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"binary\" name=\"out\" defaultChecked/> binary\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"octal\" name=\"out\" /> octal\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"hexadecimal\" name=\"out\" /> hexadecimal\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Converter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}