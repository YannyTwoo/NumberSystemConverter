{"ast":null,"code":"var _jsxFileName = \"/Users/adirathgoswami/Desktop/codejune/numbersystemsite/frontend/src/components/Converter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst map1 = new Map([[\"decimal\", 10], [\"binary\", 2], [\"octal\", 8], [\"hexadecimal\", 16], [\"base-32\", 32]]); // const mapHexadecimalValues = new Map([\n//     [10,\"A\"],\n//     [11,\"B\"],\n//     [12,\"C\"],\n//     [13,\"D\"],\n//     [14,\"E\"],\n//     [15,\"F\"],\n// ])\n\nconst convertNumber = (num, baseOg, baseConv) => {\n  return parseInt(num, baseOg).toString(baseConv);\n};\n\nfunction Converter() {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [outputNumber, setOutputNumber] = useState(0);\n\n  const updateNumber = event => {\n    setNumber(event.target.value);\n    const a = map1.get(inpChoice);\n    const b = map1.get(outChoice);\n    updateOutputNumber(convertNumber(number, a, b));\n  };\n\n  const updateOutputNumber = num => {\n    setOutputNumber(num);\n  }; //radio button logic to decide the base to and from to convert to \n\n\n  const [inpChoice, setInpChoice] = useState('decimal');\n  const [outChoice, setOutChoice] = useState('binary');\n\n  const updateInpChoice = event => {\n    setInpChoice(event.target.value);\n    console.log(inpChoice);\n  };\n\n  const updateOutChoice = event => {\n    setOutChoice(event.target.value);\n    console.log(outChoice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"converter\",\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: updateNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radbtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"decimal\",\n          name: \"inp\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), \" decimal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"binary\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \" binary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"octal\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), \" octal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateInpChoice,\n          type: \"radio\",\n          value: \"hexadecimal\",\n          name: \"inp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" hexadecimal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-head\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        type: \"number\",\n        children: outputNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radbtns\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"decimal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), \" decimal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"binary\",\n          name: \"out\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), \" binary\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"octal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), \" octal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateOutChoice,\n          type: \"radio\",\n          value: \"hexadecimal\",\n          name: \"out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), \" hexadecimal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Converter, \"lr8cuatjm/mYAEGby/Bq2rZd9A8=\");\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["React","useState","map1","Map","convertNumber","num","baseOg","baseConv","parseInt","toString","Converter","number","setNumber","outputNumber","setOutputNumber","updateNumber","event","target","value","a","get","inpChoice","b","outChoice","updateOutputNumber","setInpChoice","setOutChoice","updateInpChoice","console","log","updateOutChoice"],"sources":["/Users/adirathgoswami/Desktop/codejune/numbersystemsite/frontend/src/components/Converter.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst map1 = new Map([\n    [\"decimal\", 10],\n    [\"binary\", 2],\n    [\"octal\", 8],\n    [\"hexadecimal\", 16],\n    [\"base-32\", 32]\n])\n// const mapHexadecimalValues = new Map([\n//     [10,\"A\"],\n//     [11,\"B\"],\n//     [12,\"C\"],\n//     [13,\"D\"],\n//     [14,\"E\"],\n//     [15,\"F\"],\n// ])\n\n\n\n\n\nconst convertNumber = (num, baseOg, baseConv)=>{\n    return parseInt(num, baseOg).toString(baseConv);\n}\n\n\n\nfunction Converter() {\n\n    const [number, setNumber] = useState(0);\n    const [outputNumber, setOutputNumber] = useState(0);\n\n    const updateNumber = (event) =>{\n        setNumber(event.target.value)\n\n        const a = map1.get(inpChoice);\n        const b = map1.get(outChoice);\n        updateOutputNumber(convertNumber(number , a, b))\n    }\n    const updateOutputNumber = (num) =>{\n        setOutputNumber(num)\n    }\n\n    //radio button logic to decide the base to and from to convert to \n    const [inpChoice, setInpChoice] = useState('decimal');\n    const [outChoice, setOutChoice] = useState('binary');\n    const updateInpChoice = (event) => {\n        setInpChoice(event.target.value)\n        console.log(inpChoice)\n    }\n    const updateOutChoice = (event) => {\n        setOutChoice(event.target.value)\n        console.log(outChoice)\n    }\n\n\n\n    return (\n        <div id=\"converter\" className=\"container\">\n            <div className=\"card\">\n                <div className=\"card-head\">\n                    <h3>Input</h3>\n                </div>\n                <input type=\"text\" onChange={updateNumber} />\n                <div className=\"radbtns\">\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"decimal\" name=\"inp\" defaultChecked /> decimal\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"binary\" name=\"inp\" /> binary\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"octal\" name=\"inp\" /> octal\n                    <input onChange={updateInpChoice} type=\"radio\" value=\"hexadecimal\" name=\"inp\" /> hexadecimal\n                </div>\n            </div>\n            <div className=\"card\">\n                <div className=\"card-head\">\n                    <h3>Output</h3>\n                </div>\n                <p type=\"number\">{outputNumber}</p>\n                <div className=\"radbtns\">\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"decimal\" name=\"out\" /> decimal\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"binary\" name=\"out\" defaultChecked/> binary\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"octal\" name=\"out\" /> octal\n                    <input onChange={updateOutChoice} type=\"radio\" value=\"hexadecimal\" name=\"out\" /> hexadecimal\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Converter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}